using System;

namespace www.strive3d.net.Game
{

	// This code is generated by a tool
		
	public class CommandFactory : IDisposable
	{

		#region Permanent
		private System.Collections.Hashtable _commands = new System.Collections.Hashtable();
		private System.Data.SqlClient.SqlConnection _connection;
			

		public System.Data.SqlClient.SqlConnection Connection
		{
			get
			{
				return _connection;
			}
		}

		public CommandFactory()
		{
			_connection = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationSettings.AppSettings["ConnectionString"].ToString());
			_connection.Open();
		}

		/// 
		/// Initialises the CommandFactory with a SqlConnection.ConnectionString compatible string
		/// 
		/// The SqlConnection.ConnectionString to use
		/// Ths CommandFactory will create a new SqlConnection and Open it
		public CommandFactory(string connectionString)
		{
			_connection = new System.Data.SqlClient.SqlConnection(connectionString);
			_connection.Open();
		}

		/// 
		/// Initialises the CommandFactory with a SqlConnection object
		/// 
		/// The SqlConnection object this CommandFactory should use
		/// The CommandFactory assumes this is an open, valid SqlConnection
		public CommandFactory(System.Data.SqlClient.SqlConnection connection)
		{
			_connection = connection;

		}

		/// 
		/// Finalisers the associated Connection when the CommandFactory is finalised
		/// 
		~CommandFactory()
		{
			this.Close();
		}

		public void Close()
		{
			if(_connection.State != System.Data.ConnectionState.Closed)
			{
				_connection.Close();
			}
		}
			
		private bool isCommandCached(string commandID)
		{
			return _commands.Contains(commandID);
		}

		public System.Data.SqlClient.SqlCommand GetSqlCommand(string sql)
		{
			string thisID = sql;
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				thisCommand = new System.Data.SqlClient.SqlCommand();
	
				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.Text;
				thisCommand.CommandText = sql;
				thisCommand.UpdatedRowSource = System.Data.UpdateRowSource.FirstReturnedRecord;

				thisCommand.Prepare();
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
		}
		
		#endregion

	
	
			
		public System.Data.SqlClient.SqlCommand ActivatePlayer(System.Data.SqlTypes.SqlGuid PlayerKey)
		{
			const string thisID = "1648060957";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "ActivatePlayer";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerKey";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@PlayerKey"].Value = PlayerKey;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand ActivatePlayer()
		{
			const string thisID = "1648060957";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "ActivatePlayer";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand AreaSquareDetails(System.Data.SqlTypes.SqlInt32 AbstractionSize, System.Data.SqlTypes.SqlInt32 Offset)
		{
			const string thisID = "1664061014";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "AreaSquareDetails";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@AbstractionSize";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Offset";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@AbstractionSize"].Value = AbstractionSize;
		
			thisCommand.Parameters["@Offset"].Value = Offset;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand AreaSquareDetails()
		{
			const string thisID = "1664061014";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "AreaSquareDetails";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateCharacter(System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ModelID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 EnumRaceID)
		{
			const string thisID = "1680061071";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateCharacter";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumRaceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ModelID"].Value = ModelID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@EnumRaceID"].Value = EnumRaceID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateCharacter()
		{
			const string thisID = "1680061071";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateCharacter";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateEquipable(System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ModelID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 Value, System.Data.SqlTypes.SqlInt32 Weight, System.Data.SqlTypes.SqlInt32 EnumWearLocationID, System.Data.SqlTypes.SqlInt32 ArmorClass, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1696061128";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateEquipable";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Value";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Weight";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumWearLocationID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ArmorClass";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ModelID"].Value = ModelID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@Value"].Value = Value;
		
			thisCommand.Parameters["@Weight"].Value = Weight;
		
			thisCommand.Parameters["@EnumWearLocationID"].Value = EnumWearLocationID;
		
			thisCommand.Parameters["@ArmorClass"].Value = ArmorClass;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateEquipable()
		{
			const string thisID = "1696061128";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateEquipable";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateGroupsTable(System.Data.SqlTypes.SqlInt32 AbstractionSize, System.Data.SqlTypes.SqlBoolean AutomaticOffset, System.Data.SqlTypes.SqlInt32 LargestCoordX, System.Data.SqlTypes.SqlInt32 SmallestCoordX, System.Data.SqlTypes.SqlInt32 LargestCoordZ, System.Data.SqlTypes.SqlInt32 SmallestCoordZ)
		{
			const string thisID = "1712061185";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateGroupsTable";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@AbstractionSize";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@AutomaticOffset";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@LargestCoordX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@SmallestCoordX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@LargestCoordZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@SmallestCoordZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@AbstractionSize"].Value = AbstractionSize;
		
			thisCommand.Parameters["@AutomaticOffset"].Value = AutomaticOffset;
		
			thisCommand.Parameters["@LargestCoordX"].Value = LargestCoordX;
		
			thisCommand.Parameters["@SmallestCoordX"].Value = SmallestCoordX;
		
			thisCommand.Parameters["@LargestCoordZ"].Value = LargestCoordZ;
		
			thisCommand.Parameters["@SmallestCoordZ"].Value = SmallestCoordZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateGroupsTable()
		{
			const string thisID = "1712061185";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateGroupsTable";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateJunk(System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ModelID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 Value, System.Data.SqlTypes.SqlInt32 Weight, System.Data.SqlTypes.SqlInt32 EnumItemDurabilityID, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1728061242";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateJunk";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Value";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Weight";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumItemDurabilityID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ModelID"].Value = ModelID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@Value"].Value = Value;
		
			thisCommand.Parameters["@Weight"].Value = Weight;
		
			thisCommand.Parameters["@EnumItemDurabilityID"].Value = EnumItemDurabilityID;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateJunk()
		{
			const string thisID = "1728061242";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateJunk";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateMirror(System.Data.SqlTypes.SqlInt32 TemplateObjectID, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1744061299";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateMirror";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectID"].Value = TemplateObjectID;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateMirror()
		{
			const string thisID = "1744061299";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateMirror";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateMobile(System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ModelID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 EnumRaceID, System.Data.SqlTypes.SqlInt32 Level, System.Data.SqlTypes.SqlInt32 Strength, System.Data.SqlTypes.SqlInt32 Constitution, System.Data.SqlTypes.SqlInt32 Cognition, System.Data.SqlTypes.SqlInt32 Willpower, System.Data.SqlTypes.SqlInt32 Dexterity, System.Data.SqlTypes.SqlInt32 Hitpoints, System.Data.SqlTypes.SqlInt32 GoldCarried, System.Data.SqlTypes.SqlInt32 GoldBanked, System.Data.SqlTypes.SqlInt32 EnumSexID, System.Data.SqlTypes.SqlInt32 EnumMobileSizeID, System.Data.SqlTypes.SqlInt32 EnumMobileStateID, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1760061356";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateMobile";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumRaceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Level";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Strength";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Constitution";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Cognition";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Willpower";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Dexterity";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Hitpoints";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@GoldCarried";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@GoldBanked";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumSexID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumMobileSizeID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumMobileStateID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ModelID"].Value = ModelID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@EnumRaceID"].Value = EnumRaceID;
		
			thisCommand.Parameters["@Level"].Value = Level;
		
			thisCommand.Parameters["@Strength"].Value = Strength;
		
			thisCommand.Parameters["@Constitution"].Value = Constitution;
		
			thisCommand.Parameters["@Cognition"].Value = Cognition;
		
			thisCommand.Parameters["@Willpower"].Value = Willpower;
		
			thisCommand.Parameters["@Dexterity"].Value = Dexterity;
		
			thisCommand.Parameters["@Hitpoints"].Value = Hitpoints;
		
			thisCommand.Parameters["@GoldCarried"].Value = GoldCarried;
		
			thisCommand.Parameters["@GoldBanked"].Value = GoldBanked;
		
			thisCommand.Parameters["@EnumSexID"].Value = EnumSexID;
		
			thisCommand.Parameters["@EnumMobileSizeID"].Value = EnumMobileSizeID;
		
			thisCommand.Parameters["@EnumMobileStateID"].Value = EnumMobileStateID;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateMobile()
		{
			const string thisID = "1760061356";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateMobile";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateModel(System.Data.SqlTypes.SqlString ModelName, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlString ModelDescription)
		{
			const string thisID = "1776061413";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateModel";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelDescription";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@ModelName"].Value = ModelName;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@ModelDescription"].Value = ModelDescription;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateModel()
		{
			const string thisID = "1776061413";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateModel";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreatePlayer(System.Data.SqlTypes.SqlString PlayerEmail, System.Data.SqlTypes.SqlString PlayerPassword)
		{
			const string thisID = "1792061470";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreatePlayer";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerEmail";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerPassword";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@PlayerEmail"].Value = PlayerEmail;
		
			thisCommand.Parameters["@PlayerPassword"].Value = PlayerPassword;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreatePlayer()
		{
			const string thisID = "1792061470";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreatePlayer";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateReadable(System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ModelID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 Value, System.Data.SqlTypes.SqlInt32 Weight, System.Data.SqlTypes.SqlString Title, System.Data.SqlTypes.SqlString Content, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1808061527";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateReadable";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Value";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Weight";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Title";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Content";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ModelID"].Value = ModelID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@Value"].Value = Value;
		
			thisCommand.Parameters["@Weight"].Value = Weight;
		
			thisCommand.Parameters["@Title"].Value = Title;
		
			thisCommand.Parameters["@Content"].Value = Content;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateReadable()
		{
			const string thisID = "1808061527";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateReadable";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateResource(System.Data.SqlTypes.SqlString ResourceName, System.Data.SqlTypes.SqlString ResourceFileExtension, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlString Description, System.Data.SqlTypes.SqlString ResourcePak, System.Data.SqlTypes.SqlInt32 EnumResourceTypeID)
		{
			const string thisID = "1824061584";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateResource";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourceName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourceFileExtension";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Description";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourcePak";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumResourceTypeID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@ResourceName"].Value = ResourceName;
		
			thisCommand.Parameters["@ResourceFileExtension"].Value = ResourceFileExtension;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@Description"].Value = Description;
		
			thisCommand.Parameters["@ResourcePak"].Value = ResourcePak;
		
			thisCommand.Parameters["@EnumResourceTypeID"].Value = EnumResourceTypeID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateResource()
		{
			const string thisID = "1824061584";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateResource";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateTerrain(System.Data.SqlTypes.SqlInt32 AreaID, System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ResourceID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 EnumTerrainTypeID, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1840061641";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateTerrain";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@AreaID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumTerrainTypeID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@AreaID"].Value = AreaID;
		
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ResourceID"].Value = ResourceID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@EnumTerrainTypeID"].Value = EnumTerrainTypeID;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateTerrain()
		{
			const string thisID = "1840061641";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateTerrain";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateWieldable(System.Data.SqlTypes.SqlString TemplateObjectName, System.Data.SqlTypes.SqlInt32 ModelID, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlInt32 Value, System.Data.SqlTypes.SqlInt32 Weight, System.Data.SqlTypes.SqlInt32 Damage, System.Data.SqlTypes.SqlInt32 Hitroll, System.Data.SqlTypes.SqlInt32 EnumDamageTypeID, System.Data.SqlTypes.SqlInt32 EnumWeaponSizeID, System.Data.SqlTypes.SqlInt32 X, System.Data.SqlTypes.SqlInt32 Y, System.Data.SqlTypes.SqlInt32 Z, System.Data.SqlTypes.SqlInt32 RotationX, System.Data.SqlTypes.SqlInt32 RotationY, System.Data.SqlTypes.SqlInt32 RotationZ)
		{
			const string thisID = "1856061698";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateWieldable";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ModelID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Value";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Weight";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Damage";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Hitroll";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumDamageTypeID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumWeaponSizeID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TemplateObjectName"].Value = TemplateObjectName;
		
			thisCommand.Parameters["@ModelID"].Value = ModelID;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@Value"].Value = Value;
		
			thisCommand.Parameters["@Weight"].Value = Weight;
		
			thisCommand.Parameters["@Damage"].Value = Damage;
		
			thisCommand.Parameters["@Hitroll"].Value = Hitroll;
		
			thisCommand.Parameters["@EnumDamageTypeID"].Value = EnumDamageTypeID;
		
			thisCommand.Parameters["@EnumWeaponSizeID"].Value = EnumWeaponSizeID;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand CreateWieldable()
		{
			const string thisID = "1856061698";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "CreateWieldable";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand EnumTerrainInSquare(System.Data.SqlTypes.SqlInt32 SmallestCoordX, System.Data.SqlTypes.SqlInt32 SmallestCoordZ, System.Data.SqlTypes.SqlInt32 LargestCoordX, System.Data.SqlTypes.SqlInt32 LargestCoordZ)
		{
			const string thisID = "1872061755";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "EnumTerrainInSquare";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@SmallestCoordX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@SmallestCoordZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@LargestCoordX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@LargestCoordZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@SmallestCoordX"].Value = SmallestCoordX;
		
			thisCommand.Parameters["@SmallestCoordZ"].Value = SmallestCoordZ;
		
			thisCommand.Parameters["@LargestCoordX"].Value = LargestCoordX;
		
			thisCommand.Parameters["@LargestCoordZ"].Value = LargestCoordZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand EnumTerrainInSquare()
		{
			const string thisID = "1872061755";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "EnumTerrainInSquare";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand GetAreas(System.Data.SqlTypes.SqlInt32 MetaSize)
		{
			const string thisID = "1888061812";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "GetAreas";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@MetaSize";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@MetaSize"].Value = MetaSize;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand GetAreas()
		{
			const string thisID = "1888061812";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "GetAreas";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand GetTerrain(System.Data.SqlTypes.SqlInt32 TerrainInstanceID)
		{
			const string thisID = "1904061869";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "GetTerrain";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TerrainInstanceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TerrainInstanceID"].Value = TerrainInstanceID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand GetTerrain()
		{
			const string thisID = "1904061869";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "GetTerrain";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand LogonPlayer(System.Data.SqlTypes.SqlString Email, System.Data.SqlTypes.SqlString Password)
		{
			const string thisID = "1920061926";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "LogonPlayer";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Email";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Password";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@Email"].Value = Email;
		
			thisCommand.Parameters["@Password"].Value = Password;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand LogonPlayer()
		{
			const string thisID = "1920061926";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "LogonPlayer";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand LowerTerrain(System.Data.SqlTypes.SqlInt32 TerrainInstanceID)
		{
			const string thisID = "1036582781";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "LowerTerrain";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TerrainInstanceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TerrainInstanceID"].Value = TerrainInstanceID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand LowerTerrain()
		{
			const string thisID = "1036582781";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "LowerTerrain";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand RaiseTerrain(System.Data.SqlTypes.SqlInt32 TerrainInstanceID)
		{
			const string thisID = "1020582724";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "RaiseTerrain";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TerrainInstanceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TerrainInstanceID"].Value = TerrainInstanceID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand RaiseTerrain()
		{
			const string thisID = "1020582724";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "RaiseTerrain";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand RotateTerrain(System.Data.SqlTypes.SqlInt32 TerrainInstanceID, System.Data.SqlTypes.SqlInt32 Degrees)
		{
			const string thisID = "1228583465";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "RotateTerrain";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TerrainInstanceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Degrees";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TerrainInstanceID"].Value = TerrainInstanceID;
		
			thisCommand.Parameters["@Degrees"].Value = Degrees;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand RotateTerrain()
		{
			const string thisID = "1228583465";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "RotateTerrain";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand SelectPlayer(System.Data.SqlTypes.SqlInt32 PlayerID)
		{
			const string thisID = "844582097";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "SelectPlayer";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand SelectPlayer()
		{
			const string thisID = "844582097";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "SelectPlayer";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand SelectPlayerByPlayerKey(System.Data.SqlTypes.SqlGuid PlayerKey)
		{
			const string thisID = "860582154";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "SelectPlayerByPlayerKey";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerKey";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@PlayerKey"].Value = PlayerKey;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand SelectPlayerByPlayerKey()
		{
			const string thisID = "860582154";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "SelectPlayerByPlayerKey";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand TerrainSquareDetails(System.Data.SqlTypes.SqlInt32 AbstractionSize, System.Data.SqlTypes.SqlInt32 Offset)
		{
			const string thisID = "876582211";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "TerrainSquareDetails";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@AbstractionSize";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Offset";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@AbstractionSize"].Value = AbstractionSize;
		
			thisCommand.Parameters["@Offset"].Value = Offset;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand TerrainSquareDetails()
		{
			const string thisID = "876582211";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "TerrainSquareDetails";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand UpdateResource(System.Data.SqlTypes.SqlInt32 ResourceID, System.Data.SqlTypes.SqlString ResourceName, System.Data.SqlTypes.SqlString ResourceFileExtension, System.Data.SqlTypes.SqlInt32 PlayerID, System.Data.SqlTypes.SqlString Description, System.Data.SqlTypes.SqlString ResourcePak, System.Data.SqlTypes.SqlInt32 EnumResourceTypeID)
		{
			const string thisID = "892582268";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "UpdateResource";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourceName";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourceFileExtension";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@PlayerID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Description";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@ResourcePak";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@EnumResourceTypeID";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@ResourceID"].Value = ResourceID;
		
			thisCommand.Parameters["@ResourceName"].Value = ResourceName;
		
			thisCommand.Parameters["@ResourceFileExtension"].Value = ResourceFileExtension;
		
			thisCommand.Parameters["@PlayerID"].Value = PlayerID;
		
			thisCommand.Parameters["@Description"].Value = Description;
		
			thisCommand.Parameters["@ResourcePak"].Value = ResourcePak;
		
			thisCommand.Parameters["@EnumResourceTypeID"].Value = EnumResourceTypeID;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand UpdateResource()
		{
			const string thisID = "892582268";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID))
			{
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "UpdateResource";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else
			{
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand UpdateTerrain(System.Data.SqlTypes.SqlInt32 TerrainInstanceID, System.Data.SqlTypes.SqlInt32 TemplateObjectID, System.Data.SqlTypes.SqlDouble X, System.Data.SqlTypes.SqlSingle Y, System.Data.SqlTypes.SqlSingle Z, System.Data.SqlTypes.SqlSingle RotationX, System.Data.SqlTypes.SqlSingle RotationY, System.Data.SqlTypes.SqlSingle RotationZ) {
			const string thisID = "908582325";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID)) {
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "UpdateTerrain";
					
				// Parameters:
					
					
				System.Data.SqlClient.SqlParameter param;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TerrainInstanceID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@TemplateObjectID";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@X";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Y";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@Z";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationX";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationY";
				thisCommand.Parameters.Add(param);			
				param = null;
		
				param = new System.Data.SqlClient.SqlParameter();		
				param.ParameterName = "@RotationZ";
				thisCommand.Parameters.Add(param);			
				param = null;
		

				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else {
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}
				
				
			thisCommand.Parameters["@TerrainInstanceID"].Value = TerrainInstanceID;
		
			thisCommand.Parameters["@TemplateObjectID"].Value = TemplateObjectID;
		
			thisCommand.Parameters["@X"].Value = X;
		
			thisCommand.Parameters["@Y"].Value = Y;
		
			thisCommand.Parameters["@Z"].Value = Z;
		
			thisCommand.Parameters["@RotationX"].Value = RotationX;
		
			thisCommand.Parameters["@RotationY"].Value = RotationY;
		
			thisCommand.Parameters["@RotationZ"].Value = RotationZ;
		
								
			return thisCommand;
			
		}
	
			
		public System.Data.SqlClient.SqlCommand UpdateTerrain() {
			const string thisID = "908582325";
			System.Data.SqlClient.SqlCommand thisCommand;
			if(!this.isCommandCached(thisID)) {
				// create and add to cache
				thisCommand = new System.Data.SqlClient.SqlCommand();

				thisCommand.Connection = _connection;
				thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
				thisCommand.CommandText = "UpdateTerrain";
					
				// not sure of the usefullness of this
				// i never really got prepared statements
				thisCommand.Prepare();					
					
				_commands.Add(thisID, thisCommand);
			}
			else {
				thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
			}

			return thisCommand;
			
		}


		#region IDisposable Members

		public void Dispose()
		{
			// TODO:  Add CommandFactory.Dispose implementation
			this.Close();
		}

		#endregion
	}

}
