using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using UpdateControls;

using Strive.Client.Model;


namespace Strive.Client.ViewModel
{
    public class WorldNavigation
    {
        private HashSet<EntityModel> _selectedEntities = new HashSet<EntityModel>();
        private EntityModel _mouseOverEntity = null;

        #region Independent properties
        // Generated by Update Controls --------------------------------
        private Independent _indMouseOverEntity = new Independent();
        private Independent _indSelectedEntities = new Independent();

        public void SetSelectedEntity(EntityModel selectedEntity)
        {
            _indSelectedEntities.OnSet();
            _selectedEntities.Clear();
            _selectedEntities.Add(selectedEntity);
        }

        public void AddSelectedEntity(EntityModel selectedEntity)
        {
            _indSelectedEntities.OnSet();
            _selectedEntities.Add(selectedEntity);
        }

        public void RemoveSelectedEntity(EntityModel selectedEntity)
        {
            _indSelectedEntities.OnSet();
            _selectedEntities.Remove(selectedEntity);
        }

        public bool IsSelected(EntityModel entityModel)
        {
            _indSelectedEntities.OnGet();
            return _selectedEntities.Contains(entityModel);
        }

        public IEnumerable<EntityModel> SelectedEntities
        {
            get { _indSelectedEntities.OnGet(); return _selectedEntities; }
        }

        public EntityModel MouseOverEntity
        {
            get { _indMouseOverEntity.OnGet(); return _mouseOverEntity; }
            set { _indMouseOverEntity.OnSet(); _mouseOverEntity = value; }
        }
        // End generated code --------------------------------
        #endregion
    }
}
