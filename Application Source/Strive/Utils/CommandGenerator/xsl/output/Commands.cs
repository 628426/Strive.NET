using System;

						


	
						
		// This code is generated by a tool
		
public class CommandCache
{
	private System.Collections.Hashtable _commands = new System.Collections.Hashtable();
	private System.Data.SqlClient.SqlConnection _connection;
			
	// Hide default constructor
	private CommandCache()
	{
	}
			
	public CommandCache(string connectionString)
	{
		_connection = new System.Data.SqlClient.SqlConnection(connectionString);
		_connection.Open();
	}
			
	~CommandCache()
	{
		_connection.Close();
	}
			
	private bool isCommandCached(string commandID)
	{
		return _commands.Contains(commandID);
	}
		
	
	
			
	public System.Data.SqlClient.SqlCommand CreateEquipable(
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 Value, 
		System.Data.SqlTypes.SqlInt32 Weight, 
		System.Data.SqlTypes.SqlInt32 WearLocation, 
		System.Data.SqlTypes.SqlInt32 ArmorClass, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1618104805";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateEquipable";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Value";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Weight";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@WearLocation";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ArmorClass";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@Value"].Value = Value;
		
		thisCommand.Parameters["@Weight"].Value = Weight;
		
		thisCommand.Parameters["@WearLocation"].Value = WearLocation;
		
		thisCommand.Parameters["@ArmorClass"].Value = ArmorClass;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateJunk(
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 Value, 
		System.Data.SqlTypes.SqlInt32 Weight, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1634104862";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateJunk";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Value";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Weight";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@Value"].Value = Value;
		
		thisCommand.Parameters["@Weight"].Value = Weight;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateMirror(
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1650104919";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateMirror";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateMobile(
		System.Data.SqlTypes.SqlInt32 PhysicalObject, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 RaceID, 
		System.Data.SqlTypes.SqlInt32 Level, 
		System.Data.SqlTypes.SqlInt32 Strength, 
		System.Data.SqlTypes.SqlInt32 Constitution, 
		System.Data.SqlTypes.SqlInt32 Cognition, 
		System.Data.SqlTypes.SqlInt32 Willpower, 
		System.Data.SqlTypes.SqlInt32 Dexterity, 
		System.Data.SqlTypes.SqlInt32 Hitpoints, 
		System.Data.SqlTypes.SqlInt32 GoldCarried, 
		System.Data.SqlTypes.SqlInt32 GoldBanked, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1666104976";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateMobile";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObject";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@RaceID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Level";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Strength";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Constitution";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Cognition";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Willpower";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Dexterity";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Hitpoints";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@GoldCarried";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@GoldBanked";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObject"].Value = PhysicalObject;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@RaceID"].Value = RaceID;
		
		thisCommand.Parameters["@Level"].Value = Level;
		
		thisCommand.Parameters["@Strength"].Value = Strength;
		
		thisCommand.Parameters["@Constitution"].Value = Constitution;
		
		thisCommand.Parameters["@Cognition"].Value = Cognition;
		
		thisCommand.Parameters["@Willpower"].Value = Willpower;
		
		thisCommand.Parameters["@Dexterity"].Value = Dexterity;
		
		thisCommand.Parameters["@Hitpoints"].Value = Hitpoints;
		
		thisCommand.Parameters["@GoldCarried"].Value = GoldCarried;
		
		thisCommand.Parameters["@GoldBanked"].Value = GoldBanked;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateQuaffable(
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 Value, 
		System.Data.SqlTypes.SqlInt32 Weight, 
		System.Data.SqlTypes.SqlInt32 LiquidTypeID, 
		System.Data.SqlTypes.SqlInt32 Capacity, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1682105033";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateQuaffable";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Value";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Weight";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@LiquidTypeID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Capacity";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@Value"].Value = Value;
		
		thisCommand.Parameters["@Weight"].Value = Weight;
		
		thisCommand.Parameters["@LiquidTypeID"].Value = LiquidTypeID;
		
		thisCommand.Parameters["@Capacity"].Value = Capacity;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateReadable(
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 Value, 
		System.Data.SqlTypes.SqlInt32 Weight, 
		System.Data.SqlTypes.SqlString Title, 
		System.Data.SqlTypes.SqlString Content, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1698105090";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateReadable";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Value";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Weight";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Title";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Content";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@Value"].Value = Value;
		
		thisCommand.Parameters["@Weight"].Value = Weight;
		
		thisCommand.Parameters["@Title"].Value = Title;
		
		thisCommand.Parameters["@Content"].Value = Content;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateTerrain(
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 TerrainTypeID, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1714105147";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateTerrain";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@TerrainTypeID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@TerrainTypeID"].Value = TerrainTypeID;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	
			
	public System.Data.SqlClient.SqlCommand CreateWieldable(
		System.Data.SqlTypes.SqlInt32 PhysicalObjectID, 
		System.Data.SqlTypes.SqlInt32 AreaID, 
		System.Data.SqlTypes.SqlString Name, 
		System.Data.SqlTypes.SqlInt32 ModelID, 
		System.Data.SqlTypes.SqlInt32 Value, 
		System.Data.SqlTypes.SqlInt32 Weight, 
		System.Data.SqlTypes.SqlInt32 Damage, 
		System.Data.SqlTypes.SqlInt32 Hitroll, 
		System.Data.SqlTypes.SqlInt32 DamageTypeID, 
		System.Data.SqlTypes.SqlInt32 SpawnID, 
		System.Data.SqlTypes.SqlInt32 X, 
		System.Data.SqlTypes.SqlInt32 Y, 
		System.Data.SqlTypes.SqlInt32 Z, 
		System.Data.SqlTypes.SqlInt32 HeadingX, 
		System.Data.SqlTypes.SqlInt32 HeadingY, 
		System.Data.SqlTypes.SqlInt32 HeadingZ)
	{
		const string thisID = "1730105204";
		System.Data.SqlClient.SqlCommand thisCommand;
		if(!this.isCommandCached(thisID))
		{
			// create and add to cache
			thisCommand = new System.Data.SqlClient.SqlCommand();

			thisCommand.Connection = _connection;
			thisCommand.CommandType = System.Data.CommandType.StoredProcedure;
			thisCommand.CommandText = "CreateWieldable";
					
			// Parameters:
					
					
			System.Data.SqlClient.SqlParameter param;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@PhysicalObjectID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@AreaID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Name";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@ModelID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Value";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Weight";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Damage";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Hitroll";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@DamageTypeID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@SpawnID";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@X";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Y";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@Z";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingX";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingY";
			thisCommand.Parameters.Add(param);			
			param = null;
		
			param = new System.Data.SqlClient.SqlParameter();		
			param.ParameterName = "@HeadingZ";
			thisCommand.Parameters.Add(param);			
			param = null;
		

			// not sure of the usefullness of this
			// i never really got prepared statements
			thisCommand.Prepare();					
					
			_commands.Add(thisID, thisCommand);
		}
		else
		{
			thisCommand = (System.Data.SqlClient.SqlCommand)this._commands[thisID];
		}
				
				
		thisCommand.Parameters["@PhysicalObjectID"].Value = PhysicalObjectID;
		
		thisCommand.Parameters["@AreaID"].Value = AreaID;
		
		thisCommand.Parameters["@Name"].Value = Name;
		
		thisCommand.Parameters["@ModelID"].Value = ModelID;
		
		thisCommand.Parameters["@Value"].Value = Value;
		
		thisCommand.Parameters["@Weight"].Value = Weight;
		
		thisCommand.Parameters["@Damage"].Value = Damage;
		
		thisCommand.Parameters["@Hitroll"].Value = Hitroll;
		
		thisCommand.Parameters["@DamageTypeID"].Value = DamageTypeID;
		
		thisCommand.Parameters["@SpawnID"].Value = SpawnID;
		
		thisCommand.Parameters["@X"].Value = X;
		
		thisCommand.Parameters["@Y"].Value = Y;
		
		thisCommand.Parameters["@Z"].Value = Z;
		
		thisCommand.Parameters["@HeadingX"].Value = HeadingX;
		
		thisCommand.Parameters["@HeadingY"].Value = HeadingY;
		
		thisCommand.Parameters["@HeadingZ"].Value = HeadingZ;
		
								
		return (System.Data.SqlClient.SqlCommand)this._commands[thisID];				
			
	}
	

}
	
	
		
